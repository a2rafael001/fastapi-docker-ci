name: FastAPI CI/CD

# Срабатывает на push в ветки "dev" и "main"
on:
  push:
    branches:
      - dev
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # 1) Сначала проверяем код
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Устанавливаем Docker Compose (если ещё не установлен)
      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # 3) В зависимости от ветки делаем две схемы:
      - name: Build & Test (dev) / Build only (main)
        run: |
          if [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            echo "### RUNNING TESTS IN DEV BRANCH ###"

            # Временно создаём override-файл, который заменит command у сервиса "app"
            cat << 'EOF' > override.yml
            version: "3.9"
            services:
              app:
                command: ["pytest", "-q", "tests"]
                # Если ваши тесты должны работать на SQLite:
                environment:
                  DATABASE_URL: sqlite+aiosqlite:///./test.db
            EOF

            # Запускаем docker-compose с двумя файлами:
            #   1) оригинальный docker-compose.yml
            #   2) override.yml, чтобы service "app" выполнил pytest вместо uvicorn
            docker-compose -f docker-compose.yml -f override.yml up \
              --build --abort-on-container-exit

          else
            echo "### BUILDING IMAGE FOR MAIN BRANCH (without tests) ###"
            # Собираем Docker-образ, например, для дальнейшего деплоя
            docker build -t fastapi-app:${{ github.sha }} .
          fi


